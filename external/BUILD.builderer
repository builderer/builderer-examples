from builderer import Condition, Optional, Switch, Case

pkg = CTX.add_package("external")

pkg.git_repository(
    name = "glfw_repo",
    remote = "git@github.com:glfw/glfw.git",
    sha = "00e86d4b733103a23278fe53ce58a0d14dd47d32",
)

pkg.cc_library_external(
  name = "glfw",
  condition = Condition(platform=["windows", "linux", "macos"]), # emscripten provides its own
  hdrs = [
    "{external:glfw_repo}/include/**/*.h",
  ],
  srcs = [
    "{external:glfw_repo}/src/context.c",
    "{external:glfw_repo}/src/egl_context.c",
    "{external:glfw_repo}/src/init.c",
    "{external:glfw_repo}/src/input.c",
    "{external:glfw_repo}/src/monitor.c",
    "{external:glfw_repo}/src/null_init.c",
    "{external:glfw_repo}/src/null_joystick.c",
    "{external:glfw_repo}/src/null_monitor.c",
    "{external:glfw_repo}/src/null_window.c",
    "{external:glfw_repo}/src/osmesa_context.c",
    "{external:glfw_repo}/src/platform.c",
    "{external:glfw_repo}/src/vulkan.c",
    "{external:glfw_repo}/src/window.c",
    Switch(
      Case(Condition(platform="windows"),
        "{external:glfw_repo}/src/wgl_context.c",
        "{external:glfw_repo}/src/win32_init.c",
        "{external:glfw_repo}/src/win32_joystick.c",
        "{external:glfw_repo}/src/win32_module.c",
        "{external:glfw_repo}/src/win32_monitor.c",
        "{external:glfw_repo}/src/win32_thread.c",
        "{external:glfw_repo}/src/win32_time.c",
        "{external:glfw_repo}/src/win32_window.c",
      ),
      Case(Condition(platform="linux"),
        "{external:glfw_repo}/src/glx_context.c",
        "{external:glfw_repo}/src/linux_joystick.c",
        "{external:glfw_repo}/src/posix_module.c",
        "{external:glfw_repo}/src/posix_poll.c",
        "{external:glfw_repo}/src/posix_thread.c",
        "{external:glfw_repo}/src/posix_time.c",
        "{external:glfw_repo}/src/x11_init.c",
        "{external:glfw_repo}/src/x11_monitor.c",
        "{external:glfw_repo}/src/x11_window.c",
        "{external:glfw_repo}/src/xkb_unicode.c",
      ),
      Case(Condition(platform="macos"),
        "{external:glfw_repo}/src/cocoa_init.m",
        "{external:glfw_repo}/src/cocoa_joystick.m",
        "{external:glfw_repo}/src/cocoa_monitor.m",
        "{external:glfw_repo}/src/cocoa_time.c",
        "{external:glfw_repo}/src/cocoa_window.m",
        "{external:glfw_repo}/src/nsgl_context.m",
        "{external:glfw_repo}/src/posix_module.c",
        "{external:glfw_repo}/src/posix_thread.c",
      )
    )
  ],
  public_includes = [
    "{external:glfw_repo}/include",
  ],
  private_defines = [
    Switch(
      Case(Condition(platform="windows"), "_GLFW_WIN32"),
      Case(Condition(platform="linux"),   "_GLFW_X11"),
      Case(Condition(platform="macos"),   "_GLFW_COCOA"),
    ),
  ],
  deps = [
    ":glfw_repo",
  ],
)

pkg.cc_library_external(
  name = "glad",
  hdrs = [
    "{external:glfw_repo}/deps/glad/*.h",
  ],
  public_includes = [
    "{external:glfw_repo}/deps",
  ],
  sandbox = True,
  deps = [
    ":glfw_repo",
  ],
)

pkg.cc_library_external(
  name = "linmath",
  hdrs = [
    "{external:glfw_repo}/deps/linmath.h",
  ],
  public_includes = [
    "{external:glfw_repo}/deps",
  ],
  sandbox = True,
  deps = [
    ":glfw_repo",
  ],
)